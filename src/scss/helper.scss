@import './_colors-export';
@import './fonts';
@import './mixins';
@import './_dimensions';
@import './_pseudoclasses';
// ALL HELPER CLASSES LIVE HERE

// FONT WEIGHTS
// .font-light, .font-book, .font-medium, .font-extrabold, .font-black
$base-class: 'font';
@include map-to-helpers($base-class, $fonts, 'font-family', $pseudo-classes);
@include map-to-helpers(
  $base-class,
  $font-sizes,
  'font-size',
  $pseudo-classes,
  false
);

// Z-INDEX
// .z-0, .z-1, ..., .z-100
$base-class: 'z';
@for $i from 1 through 100 {
  @include create-helper-with-pseudo-classes(
    $base-class,
    $i,
    $i,
    'z-index',
    $pseudo-classes
  );
}
@include create-helper-with-pseudo-classes(
  $base-class,
  'auto',
  'auto',
  'z-index',
  $pseudo-classes
);

// CURSOR
$cursors: alias, all-scroll, auto, cell, copy, default, grab, grabbing, help,
  move, no-drop, none, not-allowed, pointer, progress, text, wait, zoom-in,
  zoom-out;
$base-class: 'cursor';
@each $cursor in $cursors {
  @include create-helper-with-pseudo-classes(
    $base-class,
    $cursor,
    $cursor,
    'cursor',
    $pseudo-classes
  );
}

// BOX SHADOW
.shadow {
  &-none {
    box-shadow: 0 0 0 rgba($black-true, 0);
  }
}

// BORDER WIDTH, STYLE, AND COLOR
$directions: (
  'bottom': 'b',
  'top': 't',
  'left': 'l',
  'right': 'r',
);
$border-styles: 'solid', 'dashed', 'dotted', 'double', 'none';
$border-widths: 0, 2, 4;
$base-class: 'border';

@include create-helper-with-pseudo-classes(
  $base-class,
  '',
  1px,
  'border-width',
  $pseudo-classes,
  false,
  ''
);
@each $border-width in $border-widths {
  @include create-helper-with-pseudo-classes(
    $base-class,
    $border-width,
    #{$border-width}px,
    'border-width',
    $pseudo-classes
  );

  @include create-helper-with-pseudo-classes(
    $base-class,
    $border-width,
    #{$border-width}px,
    ('border-top-width', 'border-bottom-width'),
    $pseudo-classes,
    false,
    '-y-'
  );
  @include create-helper-with-pseudo-classes(
    $base-class,
    $border-width,
    #{$border-width}px,
    ('border-left-width', 'border-right-width'),
    $pseudo-classes,
    false,
    '-x-'
  );
  @each $border-direction, $border-direction-abbreviation in $directions {
    @include create-helper-with-pseudo-classes(
      $base-class,
      $border-width,
      #{$border-width}px,
      'border-#{$border-direction}-width',
      $pseudo-classes,
      false,
      '-#{$border-direction-abbreviation}-'
    );
  }
}
@each $border-direction, $border-direction-abbreviation in $directions {
  @include create-helper-with-pseudo-classes(
    $base-class,
    $border-direction-abbreviation,
    1px,
    'border-#{$border-direction}-width',
    $pseudo-classes
  );
}
@each $style in $border-styles {
  @include create-helper-with-pseudo-classes(
    $base-class,
    $style,
    #{unquote($style)},
    'border-style',
    $pseudo-classes
  );
}
@include map-to-helpers(
  $base-class,
  $colors,
  'border-color',
  $pseudo-classes,
  true
);
@include create-helper-with-pseudo-classes(
  $base-class,
  'transparent',
  #{unquote('transparent')},
  'border-color',
  $pseudo-classes
);

// BACKGROUND
// .background-#{color} for every color in our color library
$base-class: 'background';
@include map-to-helpers(
  $base-class,
  $colors,
  'background-color',
  $pseudo-classes,
  true
);

// TEXT
// .text-#{color} for every color in our color library
$base-class: 'text';
@include map-to-helpers($base-class, $colors, 'color', $pseudo-classes, true);

// WIDTH
// .w-0, .w-1,..., .w-16, .w-20, .w-24, ... , .w-200
$base-class: 'w';
@include map-to-helpers($base-class, $dimensions, 'width', $pseudo-classes);

// MAX-WIDTH
// .max-w-0, .max-w-1,..., .max-w-16, .max-w-20, .max-w-24, ... , .max-w-200
$base-class: 'max-w';
@include map-to-helpers(
  $base-class,
  $dimensions,
  'max-width',
  $pseudo-classes,
  true
);

// MAX-WIDTH
// .max-w-0, .max-w-1,..., .max-w-16, .max-w-20, .max-w-24, ... , .max-w-200
$base-class: 'max-w';
.max-w {
  @include map-to-helpers($base-class, $dimensions, 'max-width', true);
}

// HEIGHT
// .h-0, .h-1,..., .h-16, .h-20, .h-24, ... , .h-200
$base-class: 'h';
@include map-to-helpers($base-class, $dimensions, 'height', $pseudo-classes);

//FLEX
.shrink {
  flex-shrink: 1 !important;
}

// BORDER RADIUS
$border-radius-values: (
  'none': 0,
  'regular': $border-radius-root,
);
$base-class: 'border-radius';
@include map-to-helpers(
  $base-class,
  $border-radius-values,
  $base-class,
  $pseudo-classes,
  true
);

//OPACITY
$base-class: 'opacity';
$percent: 0;
@while $percent <= 100 {
  @include create-helper-with-pseudo-classes(
    $base-class,
    $percent,
    $percent / 100,
    'opacity',
    $pseudo-classes
  );
  $percent: $percent + 5;
}

// PADDING AND MARGIN
$base-classes: 'padding', 'margin';

@each $base-class in $base-classes {
  @each $dimension-key, $dimension-value in $padding-margin-dimensions {
    @include create-helper-with-pseudo-classes(
      $base-class,
      $dimension-key,
      $dimension-value,
      $base-class,
      $pseudo-classes,
      true,
      '-a-'
    );
    @include create-helper-with-pseudo-classes(
      $base-class,
      $dimension-key,
      $dimension-value,
      ('#{$base-class}-top', '#{$base-class}-bottom'),
      $pseudo-classes,
      true,
      '-y-'
    );
    @include create-helper-with-pseudo-classes(
      $base-class,
      $dimension-key,
      $dimension-value,
      ('#{$base-class}-right', '#{$base-class}-left'),
      $pseudo-classes,
      true,
      '-x-'
    );
    @each $direction, $direction-abbreviation in $directions {
      @include create-helper-with-pseudo-classes(
        $base-class,
        $dimension-key,
        $dimension-value,
        '#{$base-class}-#{$direction}',
        $pseudo-classes,
        true,
        '-#{$direction-abbreviation}-'
      );
    }
  }
}
